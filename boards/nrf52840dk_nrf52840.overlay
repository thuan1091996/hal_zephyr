// ------------------ Remove DK board default overlay ------------------ // 
/delete-node/ &led0;
/delete-node/ &led1;
/delete-node/ &led2;
/delete-node/ &led3;
/delete-node/ &button0;
/delete-node/ &button1;
/delete-node/ &button2;
/delete-node/ &button3;
/delete-node/ &pwm_led0;


/delete-node/ &sw_pwm;

&spi1 {
	status = "disabled";
};

&spi3 {
	status = "disabled";
};

&qspi {
	status = "disabled";
};

/ {
	aliases {
		/delete-property/ sw0;
		/delete-property/ sw1;
		/delete-property/ sw2;
		/delete-property/ sw3;
		/delete-property/ led0;
		/delete-property/ led1;
		/delete-property/ led2;
		/delete-property/ led3;
		/delete-property/ pwm-led0;
		/delete-property/ bootloader-led0;
		/delete-property/ mcuboot-led0;
		/delete-property/ mcuboot-button0;
	};
};

// ------------------ Application  ------------------ // 

&zephyr_udc0 {
	usbd_cdc_acm: cdc_acm_uart0 {
		compatible = "zephyr,cdc-acm-uart";
		status = "okay";
	};
};

&pwm1 {
	status = "okay";
	pinctrl-0 = <&pwm1_default>;
	pinctrl-names = "default";
};

&pwm2 {
	status = "okay";
	pinctrl-0 = <&pwm2_default>;
	pinctrl-names = "default";
};

&pwm3 {
	status = "okay";
	pinctrl-0 = <&pwm3_default>;
	pinctrl-names = "default";
};

/ {
	zephyr,user {
		pwm_pins {
			compatible = "pwm-leds";
			pwm0_pins: pwm0_pins {
				pwms =	<&pwm0 0 PWM_KHZ(2000) PWM_POLARITY_NORMAL>,
						<&pwm0 1 PWM_KHZ(2000) PWM_POLARITY_NORMAL>,
						<&pwm0 2 PWM_KHZ(2000) PWM_POLARITY_NORMAL>,
						<&pwm0 3 PWM_KHZ(2000) PWM_POLARITY_NORMAL>;
			};

			pwm1_pins: pwm1_pins {
				pwms =	<&pwm1 0 PWM_KHZ(2000) PWM_POLARITY_NORMAL>,
						<&pwm1 1 PWM_KHZ(2000) PWM_POLARITY_NORMAL>,
						<&pwm1 2 PWM_KHZ(2000) PWM_POLARITY_NORMAL>,
						<&pwm1 3 PWM_KHZ(2000) PWM_POLARITY_NORMAL>;
			};

			pwm2_pins: pwm2_pins {
				pwms =	<&pwm2 0 PWM_KHZ(2000) PWM_POLARITY_NORMAL>,
						<&pwm2 1 PWM_KHZ(2000) PWM_POLARITY_NORMAL>,
						<&pwm2 2 PWM_KHZ(2000) PWM_POLARITY_NORMAL>,
						<&pwm2 3 PWM_KHZ(2000) PWM_POLARITY_NORMAL>;
			};

			pwm3_pins: pwm3_pins {
				pwms =	<&pwm3 0 PWM_KHZ(2000) PWM_POLARITY_NORMAL>,
						<&pwm3 1 PWM_KHZ(2000) PWM_POLARITY_NORMAL>,
						<&pwm3 2 PWM_KHZ(2000) PWM_POLARITY_NORMAL>,
						<&pwm3 3 PWM_KHZ(2000) PWM_POLARITY_NORMAL>;
			};
		};
	};
};


&pinctrl {
	uart0_default: uart0_default
	{
		group2 {
			psels = <NRF_PSEL(UART_RX, 0, 9)>,
					<NRF_PSEL(UART_CTS, 0, 7)>;
		};
	};
	uart0_sleep: uart0_sleep
	{
		group1 {
			psels = <NRF_PSEL(UART_TX, 0, 6)>,
					<NRF_PSEL(UART_RX, 0, 9)>,
					<NRF_PSEL(UART_RTS, 0, 5)>,
					<NRF_PSEL(UART_CTS, 0, 7)>;
			low-power-enable;
		};
	};
	i2c0_default: i2c0_default 
	{
		group1 {
			psels = <NRF_PSEL(TWIM_SDA, 0, 8)>,
					<NRF_PSEL(TWIM_SCL, 0, 11)>;
		};
	};
	
	i2c0_sleep: i2c0_sleep
	{
		group1 {
			psels = <NRF_PSEL(TWIM_SDA, 0, 8)>,
					<NRF_PSEL(TWIM_SCL, 0, 11)>;
		};
	};

	pwm0_sleep: pwm0_sleep
	{
		group1 {
			psels = <NRF_PSEL(PWM_OUT0, 0, 4)>,
					<NRF_PSEL(PWM_OUT1, 0, 13)>,
					<NRF_PSEL(PWM_OUT2, 0, 14)>,
					<NRF_PSEL(PWM_OUT3, 0, 15)>;
		};
	};

	pwm0_default: pwm0_default
	{
		group1 {
			psels = <NRF_PSEL(PWM_OUT0, 0, 4)>,
					<NRF_PSEL(PWM_OUT1, 0, 13)>,
					<NRF_PSEL(PWM_OUT2, 0, 14)>,
					<NRF_PSEL(PWM_OUT3, 0, 15)>;
		};
	};

	pwm1_default: pwm1_default {
		group1 {
			psels = <NRF_PSEL(PWM_OUT0, 0, 17)>,
		   <NRF_PSEL(PWM_OUT1, 0, 24)>,
		   <NRF_PSEL(PWM_OUT2, 0, 25)>,
		   <NRF_PSEL(PWM_OUT3, 0, 27)>;
		};
	};

	pwm2_default: pwm2_default {
		group1 {
			psels = <NRF_PSEL(PWM_OUT0, 0, 28)>,
		   <NRF_PSEL(PWM_OUT1, 0, 29)>,
		   <NRF_PSEL(PWM_OUT2, 0, 31)>,
		   <NRF_PSEL(PWM_OUT3, 1, 2)>;
		};
	};

	pwm3_default: pwm3_default {
		group1 {
			psels = <NRF_PSEL(PWM_OUT0, 1, 4)>,
		   <NRF_PSEL(PWM_OUT1, 1, 7)>,
		   <NRF_PSEL(PWM_OUT2, 1, 10)>,
		   <NRF_PSEL(PWM_OUT3, 1, 11)>;
		};
	};
};
